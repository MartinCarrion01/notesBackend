{"version":3,"sources":["Components/Note.js","Services/NoteService.js","Components/Notification.js","Components/Footer.js","Components/App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","url","NoteService","getAll","a","axios","get","response","console","log","data","save","object","post","update","id","put","Notification","message","className","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","fetchNotes","noteService","then","catch","error","alert","useEffect","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","createdNote","concat","notesToShow","filter","find","updatedNote","changedNote","map","onSubmit","value","onChange","target","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb615d13.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? \"make not important\" : \"make important\";\r\n  return (\r\n    <div>\r\n      <li>{note.content}</li>\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://boiling-sea-79098.herokuapp.com/notes\";\r\n\r\nconst NoteService = {\r\n  getAll: async () => {\r\n    const response = await axios.get(url);\r\n    console.log(\"request sent\");\r\n    return response.data;\r\n  },\r\n  save: async (object) => {\r\n    const response = await axios.post(url, object);\r\n    return response.data;\r\n  },\r\n  update: async (id, object) => {\r\n    const response = await axios.put(`${url}/${id}`, object);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default NoteService;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: \"green\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n  };\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>\r\n        Note app, Department of Computer Science, University of Helsinki 2020\r\n      </em>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Note from \"./Note\";\r\nimport noteService from \"../Services/NoteService\";\r\nimport Notification from \"./Notification\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"a new note...\");\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const fetchNotes = async () => {\r\n    console.log(\"inside effect\");\r\n    const initialNotes = noteService.getAll();\r\n    initialNotes.then((data) => setNotes(data)).catch((error) => alert(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  const addNote = async (event) => {\r\n    event.preventDefault();\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    };\r\n\r\n    const createdNote = await noteService.save(noteObject);\r\n\r\n    setNotes(notes.concat(createdNote));\r\n    setNewNote(\"\");\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setNewNote(event.target.value);\r\n  };\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter((note) => note.important === true);\r\n\r\n  const toggleImportance = async (id) => {\r\n    const note = notes.find((note) => note.id === id);\r\n    const updatedNote = { ...note, important: !note.important };\r\n\r\n    const changedNote = await noteService.update(id, updatedNote);\r\n\r\n    setNotes(notes.map((note) => (note.id !== id ? note : changedNote)));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <ul>\r\n        {notesToShow.map((note) => (\r\n          <Note\r\n            note={note}\r\n            key={note.id}\r\n            toggleImportance={() => toggleImportance(note.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <button onClick={() => setShowAll(!showAll)}>\r\n        {showAll ? \"show important\" : \"show all\"}\r\n      </button>\r\n      <form onSubmit={addNote}>\r\n        <input value={newNote} onChange={handleChange} />\r\n        <button type=\"submit\">Guardar</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./styles/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}